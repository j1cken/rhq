<project xmlns="http://maven.apache.org/POM/4.0.0" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>

   <parent>
      <groupId>org.rhq</groupId>
      <artifactId>rhq-core-parent</artifactId>
      <version>4.4.0-SNAPSHOT</version>
   </parent>

   <artifactId>rhq-core-plugin-test-api</artifactId>
   <packaging>pom</packaging>

   <name>RHQ Plugin Test API</name>
   <description>the API for writing integration tests for the RHQ plugin container or RHQ plugins</description>

   <dependencies>

      <dependency>
         <groupId>${rhq.groupId}</groupId>
         <artifactId>rhq-core-plugin-container</artifactId>
         <version>${project.version}</version>
      </dependency>

      <!-- TODO: This is a workaround for the Javac bug requiring annotations to be
                 available when compiling dependent classes. It is fixed in JDK 7. -->
      <!-- JPA annotations -->
      <dependency>        
         <groupId>javax.persistence</groupId>
         <artifactId>persistence-api</artifactId>
         <version>1.0</version>
      </dependency>
      <!-- Hibernate annotations -->
      <dependency>
         <groupId>hibernate-annotations</groupId>
         <artifactId>hibernate-annotations</artifactId>
      </dependency>
    
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>test-utils</artifactId>
         <version>${project.version}</version>
      </dependency>

       <dependency>
           <groupId>org.rhq</groupId>
           <artifactId>rhq-arquillian-agent-plugin-container-embedded</artifactId>
           <version>${project.version}</version>
       </dependency>

       <dependency>
           <groupId>org.powermock</groupId>
           <artifactId>powermock-module-testng</artifactId>
           <version>${powermock.version}</version>
       </dependency>

       <dependency>
           <groupId>org.powermock</groupId>
           <artifactId>powermock-api-mockito</artifactId>
           <version>${powermock.version}</version>
       </dependency>

       <dependency>
           <groupId>org.jboss.arquillian.container</groupId>
           <artifactId>arquillian-container-spi</artifactId>
           <version>${arquillian.version}</version>
       </dependency>

       <dependency>
           <groupId>org.jboss.arquillian.core</groupId>
           <artifactId>arquillian-core-spi</artifactId>
           <version>${arquillian.version}</version>
       </dependency>

       <dependency>
           <groupId>org.jboss.arquillian.container</groupId>
           <artifactId>arquillian-container-test-api</artifactId>
           <version>${arquillian.version}</version>
       </dependency>

       <dependency>
           <groupId>org.jboss.arquillian.test</groupId>
           <artifactId>arquillian-test-spi</artifactId>
           <version>${arquillian.version}</version>
       </dependency>

       <dependency>
           <groupId>org.jboss.arquillian.testng</groupId>
           <artifactId>arquillian-testng-container</artifactId>
           <version>${arquillian.version}</version>
       </dependency>

       <dependency>
           <groupId>org.jboss.shrinkwrap</groupId>
           <artifactId>shrinkwrap-impl-base</artifactId>
           <version>${shrinkwrap.version}</version>
       </dependency>

       <dependency>
           <groupId>org.jboss.shrinkwrap.resolver</groupId>
           <artifactId>shrinkwrap-resolver-api</artifactId>
           <version>${shrinkwrap.resolver.version}</version>
       </dependency>

       <dependency>
           <groupId>org.jboss.shrinkwrap.resolver</groupId>
           <artifactId>shrinkwrap-resolver-api-maven</artifactId>
           <version>${shrinkwrap.resolver.version}</version>
       </dependency>

       <dependency>
           <groupId>org.jboss.shrinkwrap.resolver</groupId>
           <artifactId>shrinkwrap-resolver-impl-maven</artifactId>
           <version>${shrinkwrap.resolver.version}</version>
       </dependency>

   </dependencies>

</project>
