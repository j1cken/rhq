<?xml version="1.0" encoding="UTF-8" ?>
<server>

   <mbean code="org.jboss.cache.TreeCache"
      name="rhq.cache:service=cache">
      <depends>jboss:service=TransactionManager</depends>

      <!--         Configure the TransactionManager -->
      <attribute name="TransactionManagerLookupClass">org.jboss.cache.JBossTransactionManagerLookup</attribute>

      <!--             Isolation level : SERIALIZABLE
         REPEATABLE_READ (default)
         READ_COMMITTED
         READ_UNCOMMITTED
         NONE
      -->
      <attribute name="IsolationLevel">REPEATABLE_READ</attribute>

      <!--
            Node locking scheme:
             OPTIMISTIC
             PESSIMISTIC (default)
         -->
      <attribute name="NodeLockingScheme">OPTIMISTIC</attribute>

      <!--              Valid modes are LOCAL, REPL_ASYNC and REPL_SYNC -->
      <attribute name="CacheMode">REPL_ASYNC</attribute>

      <!--         Just used for async repl: use a replication queue -->
      <attribute name="UseReplQueue">false</attribute>

      <!--             Replication interval for replication queue (in ms) -->
      <attribute name="ReplQueueInterval">100</attribute>

      <!--             Max number of elements which trigger replication -->
      <attribute name="ReplQueueMaxElements">10</attribute>


      <!--  Name of cluster. Needs to be the same for all clusters, in order
         to find each other
      -->
      <attribute name="ClusterName">${jboss.partition.name:DefaultPartition}-RHQ-Cache</attribute>

      <!--  JGroups protocol stack properties. Can also be a URL,
         e.g. file:/home/bela/default.xml
         <attribute name="ClusterProperties"></attribute>
      -->
      <attribute name="ClusterConfig">

         <config>
            <!--  UDP: if you have a multihomed machine,
               set the bind_addr attribute to the appropriate NIC IP address, e.g bind_addr="192.168.0.2"
            -->
            <!--  UDP: On Windows machines, because of the media sense feature
               being broken with multicast (even after disabling media sense)
               set the loopback attribute to true

               TODO need to parametrize and add to installer

            -->
            <UDP
               mcast_addr="${jgroups.udp.mcast_addr:230.1.2.3}"
               mcast_port="${jboss.alertcachepartition.mcast_port:48899}"
               ip_ttl="${jgroups.udp.ip_ttl:2}"
               bind_addr="${jgroups.bind_addr}"
               ip_mcast="true"
               tos="8"
               mcast_send_buf_size="150000"
               mcast_recv_buf_size="80000"
               ucast_send_buf_size="150000"
               ucast_recv_buf_size="80000"
               loopback="${rhq.server.startup.partition.udpLoopback:false}" />
            <PING timeout="2000"
               num_initial_members="3"
               up_thread="false"
               down_thread="false" />
            <MERGE2 min_interval="10000"
               max_interval="20000" />
            <FD_SOCK />
            <VERIFY_SUSPECT timeout="1500"
               up_thread="false"
               down_thread="false" />
            <pbcast.NAKACK gc_lag="50"
               retransmit_timeout="600,1200,2400,4800"
               max_xmit_size="8192"
               up_thread="false"
               down_thread="false" />
            <UNICAST timeout="600,1200,2400"
               down_thread="false" />
            <pbcast.STABLE desired_avg_gossip="20000"
               up_thread="false"
               down_thread="false" />
            <FRAG frag_size="8192" down_thread="false"
               up_thread="false" />
            <pbcast.GMS join_timeout="5000" join_retry_timeout="2000"
               shun="true" print_local_addr="true" />
            <pbcast.STATE_TRANSFER up_thread="true" down_thread="true" />
         </config>
      </attribute>

      <!--         Whether or not to fetch state on joining a cluster -->
      <attribute name="FetchStateOnStartup">true</attribute>

      <!--             The max amount of time (in milliseconds) we wait until the
         initial state (ie. the contents of the cache) are retrieved from
         existing members in a clustered environment

      -->
      <attribute name="InitialStateRetrievalTimeout">5000</attribute>

      <!--             Number of milliseconds to wait until all responses for a
         synchronous call have been received.
      -->
      <attribute name="SyncReplTimeout">15000</attribute>

      <!--  Max number of milliseconds to wait for a lock acquisition -->
      <attribute name="LockAcquisitionTimeout">10000</attribute>

 <attribute name="EvictionPolicyClass">org.jboss.cache.eviction.LRUPolicy</attribute>
          <!-- Specific eviction policy configurations. This is LRU -->
          <attribute name="EvictionPolicyConfig">
             <config>
                <attribute name="wakeUpIntervalSeconds">5</attribute>
                <!-- Cache wide default -->
                <region name="/_default_">
                    <attribute name="maxNodes">50000</attribute>
                    <attribute name="timeToLiveSeconds">3600</attribute>
                </region>
                <region name="/schedules">
                    <attribute name="maxNodes">5000</attribute>
                    <attribute name="timeToLiveSeconds">1000</attribute>
                </region>
                <region name="/org/jboss/test/data">
                    <attribute name="maxNodes">5</attribute>
                    <attribute name="timeToLiveSeconds">4</attribute>
                </region>
                <region name="/test/">
                    <attribute name="maxNodes">10000</attribute>
                    <attribute name="timeToLiveSeconds">5</attribute>
                </region>
                <region name="/maxAgeTest/">
                   <attribute name="maxNodes">10000</attribute>
                   <attribute name="timeToLiveSeconds">8</attribute>
                   <attribute name="maxAgeSeconds">10</attribute>
                </region>
             </config>
          </attribute>
   </mbean>


    <!-- Map the cache into JNDI -->
    <mbean
            code="org.jboss.invocation.jrmp.server.JRMPProxyFactory"
            name="mydomain:service=proxyFactory,type=jrmp,target=factory">
        <attribute name="InvokerName">jboss:service=invoker,type=jrmp</attribute>
        <attribute name="TargetName">rhq.cache:service=cache</attribute>
        <attribute name="JndiName">RhqCache</attribute>
        <attribute name="InvokeTargetMethod">true</attribute>
        <attribute name="ExportedInterface">org.jboss.cache.TreeCacheMBean</attribute>
        <attribute name="ClientInterceptors">
            <iterceptors>
                <interceptor>org.jboss.proxy.ClientMethodInterceptor</interceptor>
                <interceptor>org.jboss.proxy.SecurityInterceptor</interceptor>
                <interceptor>org.jboss.invocation.InvokerInterceptor</interceptor>
            </iterceptors>
        </attribute>
        <depends>jboss:service=invoker,type=jrmp</depends>
        <depends>rhq.cache:service=cache</depends>
    </mbean>
</server>
